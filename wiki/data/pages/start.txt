====== Codex ======

Welcome to Polycademy's Codex. This is part of our [[wp>Knowledge Management System]]. It will replace the standard textbook you get from your everyday school. This system is a [[wp>Wiki]]. A wiki is a website software which allows its users to collaboratively create content. This means you, as a student, get to contribute to the course material and thus improve the content for future users. It is a like a never-ending book!

The Codex contains the structure of our courses, the core class material, code examples, and tutorials for all the coding aspects we going to learn. As you progress through your project with your group, you will also maintain documentation about your project on this codex. You should use this as your reference for when you going through the class and when you are programming your application. This wiki will also link to other wikis and sources of documentation, to allow you a greater understanding of the mechanics of software development.

The Codex is a collaborative undertaking so start sharing your knowledge with your fellow students and they likewise will share knowledge with you. To understand how to share on the Codex and our other technologies please refer to our [[Wiki:Manual | Operating Manual]].

===== Course Structure =====

Polycademy is a portmanteau of two words, "[[wp>Polymath]]" and "[[wp>Academy]]". We intend to eventually teach many different subjects in this institution, however we begin by offering Web Application Development. Please see our [[Business of Polycademy:Long Term Road Map]] for more.

To understand program lengths and pricing, see [[Business of Polycademy:Pricing & Scheduling]]. 

To see examples of how ideas can be broken down into programs, see [[Course Examples]].

===== Web Application Development =====

Web application development is simply the development of software applications that are deployed over the internet. Why web application development and not the standard desktop application development? Because the web deployment offers several (advantageous) features:

  * Faster distribution and deployment - No need of installation, no need of restart, no need of changing files on the client computer results in higher [[wp>Conversion Rate|conversion rates]].
  * Lower risk of piracy - Software becomes delivered as a [[wp>Software as a service|service]] instead of as an end product.
  * Multi-platform support - Since the application is installed on the server rather than the client, the issue of [[wp>Computing Platform|platform]] fragmentation is reduced. This means applications are easier to support, because users do not need to install it and face installation issues, outdated software or compatibility issues.
  * Immediate Feedback - Since users have to connect to the server, this allows tracking of usage styles. This form of immediate feedback can be used to customise the application to each user's style and also to figure out how to improve your software.
  * Shorter Lifecycles - This allows you to [[wp>Release early, release often|release early, release often]]. This means your innovation cycle is faster allowing you to outpace the any desktop based competition. Take for example, if you were to release a new desktop application, it would take some time for every user to update to the new application and some may never do. Whereas if every user had to connect to a server to run the application, the application would always be up to date and you would get immediate feedback on how your customers responded.

At the same time it has some disadvantages such as the application's performance will always be limited by internet speed and availability. However innovations in internet speed and internet availability has driven the adoption of web applications over desktop applications. These are reducing our dependency on local client CPU or GPU processing for delivery of high performance or high availability of applications. Jeff Atwood agrees.(([[http://www.codinghorror.com/blog/2009/08/all-programming-is-web-programming.html|All Programming is Web Programming]]))

==== Outline of Web Application Development ====

Polycademy teaches web application development from a top-down approach. We want to start from the "Why?" before going to the "What?" and finally the "How?". There is no point learning how to manipulate an array if you don't know what it's used for and why it's used.

As students you will be starting with your own project with a group of 3 - 5 other students. Why should we learn software development? Because we want to make something awesome, something fun and entertaining, something useful that could simplify or automate our life tasks, and possibly something that makes money.

Why are we making it in a group? Because complex software demands teamwork. The beauty of the internet and open source software, is that if you make this your career, you will always be working with other people, even people who you may never see in real life, living in another country. Many hands make light work. However just having a group won't make a project succeed, one needs to learn how to manage, distribute and delegate group work. Therefore software development requires careful planning, methodologies and team work to succeed.

The list below is our main categories of interest, it loosely follows the waterfall model of software development. Each category has further subtopics. **We will only teach what is required for your application in order to maintain our purposeful learning.** This means that not all topics will be covered. The holes in your knowledge will be either bridged with more advanced topics or through your own interest in learning them. Each topic is self-contained, so feel free to skip to wherever your interest lies.

  - [[Web Application Development:Vision and Plan]]
  - [[Web Application Development:Solution Stack]]
  - [[Web Application Development:Web Design]]
  - [[Web Application Development:Web Programming]]
  - [[Web Application Development:Dynamic Client Side]]
  - [[Web Application Development:Multimedia]]
  - [[Web Application Development:Security]]
  - [[Web Application Development:Payments]]
  - [[Web Application Development:Performance]]
  - [[Web Application Development:Deployment]]

A more detailed mindmap can be downloaded at [[Course Mindmaps]].

Class schedule will be modified depending on project complexity. The more complex your project is, the more knowledge that will be involved. This will be discussed during our first class. Project lengths can vary between 6 months to 1 year. There will be a limit on how advanced and complex your project can be. If it is too complex, we may first construct a prototype which can then be further developed.
===== Project Licensing =====

It is important to note that since we are freely using Github to host the code for the project, this means the project needs to be licensed as open source software. This part needs to be expanded!

See [[Business of Polycademy:Project Licensing]] & [[Business of Polycademy:Terms & Conditions]]